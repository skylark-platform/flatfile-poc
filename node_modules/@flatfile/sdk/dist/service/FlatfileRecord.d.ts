import { IRowResponse } from '../graphql/queries/GET_FINAL_DATABASE_VIEW';
import { RecordMutation } from './RecordMutation';
export declare class FlatfileRecord {
    private $raw;
    readonly data: TRecordData;
    readonly recordId: number;
    private readonly $info;
    constructor($raw: IRowResponse);
    get valid(): boolean;
    get status(): ERecordStatus;
    get allMessages(): IRecordMessage[];
    get errors(): IRecordMessage[];
    get warnings(): IRecordMessage[];
    get info(): IRecordMessage[];
    getMutation(): RecordMutation;
}
export declare type TPrimitive = string | boolean | number | null;
export declare type TRecordData<T extends TPrimitive | undefined = TPrimitive> = {
    [key: string]: T;
};
export declare enum ELevel {
    ERROR = "error",
    WARN = "warn",
    INFO = "info"
}
export interface IRecordInfo<L extends ELevel = ELevel> {
    level: L;
    key: string;
    message: string;
}
export interface IRecordMessage<L extends ELevel = ELevel> {
    level: L;
    field: string;
    message: string;
}
export declare enum ERecordStatus {
    REVIEW = "review",
    DISMISSED = "dismissed",
    ACCEPTED = "accepted",
    SUBMITTED = "submitted"
}
