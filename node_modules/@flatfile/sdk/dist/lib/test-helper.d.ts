import { Scope } from 'nock';
import { IRowResponse } from '../graphql/queries/GET_FINAL_DATABASE_VIEW';
import { ImportSession } from '../importer/ImportSession';
import { FlatfileRecord } from '../service/FlatfileRecord';
import { RecordsChunk } from '../service/RecordsChunk';
/**
 * Mock a graphql response and expect n invocations
 *
 * @param reqName
 * @param responseCode
 * @param payload
 * @param times
 */
export declare const mockGraphQLRequest: (reqName: string, responseCode?: number, payload?: any, times?: number) => Scope;
/**
 * Create a record chunk within paramaters for testing purposes
 *
 * @param session
 * @param records
 * @param totalRecords
 * @param skip
 * @param limit
 */
export declare function createChunk(session: ImportSession, records: FlatfileRecord[], totalRecords?: number, skip?: number, limit?: number, index?: number): RecordsChunk;
/**
 * Make a series of sample rows for testing purposes
 *
 * @param start
 * @param limit
 */
export declare function makeRows(start?: number, limit?: number): IRowResponse[];
/**
 * Make a series of sample records for testing purposes
 *
 * @param start
 * @param limit
 */
export declare function makeRecords(start?: number, limit?: number): FlatfileRecord[];
