"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var last_1 = require("./last");
var pipe_1 = require("./pipe");
describe('last', function () {
    describe('data first', function () {
        test('should return last', function () {
            expect(last_1.last([1, 2, 3])).toEqual(3);
        });
        test('empty array', function () {
            expect(last_1.last([])).toEqual(undefined);
        });
    });
    describe('data last', function () {
        test('should return last', function () {
            expect(last_1.last([1, 2, 3])).toEqual(3);
        });
        test('empty array', function () {
            expect(last_1.last([])).toEqual(undefined);
        });
    });
    describe('types', function () {
        test('should return T | undefined for Array input', function () {
            var input = [1, 2, 3];
            var actual = last_1.last(input);
            var result = true;
            expect(result).toEqual(true);
        });
        test('should not return undefined for non empty arrays', function () {
            var input = [1, 2, 3];
            var data = last_1.last(input);
            var result = true;
            expect(result).toEqual(true);
        });
        test('should infer type in pipes', function () {
            var data = pipe_1.pipe('this is a text', function (data) { return data.split(''); }, last_1.last());
            var result = true;
            expect(result).toEqual(true);
        });
    });
});
